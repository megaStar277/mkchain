# shellcheck shell=bash

# ``````````````````````````````````````````````````````````````````````````````
# Function name: sslInfo()
#
# Description:
#   Extract information about certificates needed to make a proper chain.
#
# Usage:
#   sslInfo function_name params
#
# Examples:
#   sslInfo "CheckConn 172.20.20.50 22"
#

function sslInfo() {

  local _FUNCTION_ID="sslInfo"
  local _STATE=0

  local _ssl_ident_issuer_string="issuer="
  local _ssl_ident_subject_string="subject="
  local _ssl_regexp_string="CN.*=.*"

  local _ssl_delivered_certificates=("${ssl_delivered_certificates_list[@]}")

  local _key_path=""
  local _key_path_name=""
  local _key_issuer=""
  local _key_subject=""
  local _key_issuer_hash=""
  local _key_subject_hash=""

  # Temporary table for storing data in the form path:issuer:subject.
  local _ssl_attr=()

  _logger "info" \
    "$_FUNCTION_ID()" \
    "initialization of variables with initial values"

  for i in "${_ssl_delivered_certificates[@]}" ; do

    _key_path="$i"
    _key_path_name="$(basename "$i")"

    _logger "info" \
      "$_FUNCTION_ID()" \
      "get information from the $_key_path_name"

    # Responsible for search 'Issuer' and 'Subject' strings defining the relationship between certificates ;
    # removes all whitespace found in strings => (sed 's/  *//g').
    _key_issuer=$(openssl x509 -noout -issuer -in "$_key_path" | \
          grep "$_ssl_ident_issuer_string" | egrep -o "$_ssl_regexp_string" | \
          cut -d "=" -f2 | \
          sed 's/  *//g')

    _key_issuer_hash=$(openssl x509 -noout -issuer_hash -in "$_key_path")

    _key_subject=$(openssl x509 -noout -subject -in "$_key_path" | \
          grep "$_ssl_ident_subject_string" | egrep -o "$_ssl_regexp_string" | \
          cut -d "=" -f2 | \
          sed 's/  *//g' | \
          awk -F '[/,]' '{print $1}')

    _key_subject_hash=$(openssl x509 -noout -subject_hash -in "$_key_path")

    _logger "info" \
      "$_FUNCTION_ID()" \
      "adding new elements to the array"

    # Assign an element to the array with 'paht:issuer:subject' notation.
    _ssl_attr+=(\
    "${_key_path}:${_key_issuer}:${_key_subject}:${_key_issuer_hash}:${_key_subject_hash}")

    _logger "info" \
      "$_FUNCTION_ID()" \
      "init _ssl_attr=() 'path':'issuer':'subject':'issuer_hash':'subject_hash' notation, _ssl_attr=('${_ssl_attr[-1]}')"

  done

  # Copy the contents of the temporary (local) array to the global array.
  ssl_attr=("${_ssl_attr[@]}")

  _logger "info" \
    "$_FUNCTION_ID()" \
    "copy the contents of local _ssl_attr=() to global ssl_attr=()"

  return $_STATE

}
